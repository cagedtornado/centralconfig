machine:
  services:
    - docker
  environment:
    PACKAGE_PATH: "github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME"    
    GOPATH: "$HOME/.go_workspace"
    DOCKER_DIR: "$HOME/docker_workspace"
    PROJECT_DIR: "$GOPATH/src/$PACKAGE_PATH"
    GODIST: "go1.6.2.linux-amd64.tar.gz"
    NATIVE_BINARY: "$CIRCLE_ARTIFACTS/centralconfig_linux_amd64"
  post:
    # Install the specified version of Go
    - mkdir -p download
    - test -e download/$GODIST || curl -o download/$GODIST https://storage.googleapis.com/golang/$GODIST
    - sudo rm -rf /usr/local/go
    - sudo tar -C /usr/local -xzf download/$GODIST    
    # Create our docker workspace
    - mkdir -p "$DOCKER_DIR"
checkout:
  post:
    # Get our UI source
    - git clone https://github.com/$CIRCLE_PROJECT_USERNAME/centralconfig-ui.git
dependencies:
  pre:    
    # Sanity check that our go version is installed
    - go version
    # Sanity check docker version
    - docker info
    # Upgrade MySQL to 5.6
    - sudo apt-add-repository -y 'deb http://ppa.launchpad.net/ondrej/mysql-experimental/ubuntu precise main'
    - sudo apt-get update; sudo DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server-5.6
    # Compiler and release tools
    - go get github.com/mitchellh/gox
    - go get github.com/tcnksm/ghr
    # Static assets compilers
    - go get github.com/jteeuwen/go-bindata/...
    - go get github.com/elazarl/go-bindata-assetfs/...
    # Unit test reports
    - go get -u github.com/jstemmer/go-junit-report 
  override:
    # Create our project workspace
    - mkdir -p "$PROJECT_DIR"
    # Go configuration on CircleCI is wonky.  Make our code
    # is in the correct Go workspace structure    
    - rsync -azC --delete ./ --include=".git" "$PROJECT_DIR"
    - env GOOS=windows go get -d -v $PACKAGE_PATH/...
    - go get -t -d -v $PACKAGE_PATH/...    
  post: 
    # Setup our UI 
    - mkdir -p /tmp/ui/js
    - mkdir -p /tmp/ui/css
    - cd centralconfig-ui; git describe --tags; npm set progress=false; npm install; npm run build; cp css/*.css /tmp/ui/css; cp js/bundle.js /tmp/ui/js; cp index.html /tmp/ui
    - cp -r /tmp/ui $PROJECT_DIR
    - ls -l $PROJECT_DIR
    # Compile the UI static assets into a Go sourcefile (to be compiled)
    - cd $PROJECT_DIR; go-bindata-assetfs -pkg cmd ./ui/...;rm cmd/bindata_assetfs.go; ls -l cmd; mv bindata_assetfs.go cmd; ls -l cmd 
    # Install for our platform to be able to generate 
    # SQL DDL for our integration tests 
    - go install $PACKAGE_PATH/...
    - centralconfig defaults --mysql > mysql.sql    
  cache_directories:
    - ~/download
database:
  override:
    # Sanity check MySQL version and create test database
    - mysql -V
    - mysql circle_test < mysql.sql
test:
  pre:
    - go vet -x $PACKAGE_PATH/...        
  override:
    - go test -v -race $PACKAGE_PATH/...
  post:
    # Publish test results in jUnit format (so CircleCI can report on tests better)
    - mkdir $CIRCLE_TEST_REPORTS/junit    
    - go test -v -race $PACKAGE_PATH/... | go-junit-report > $CIRCLE_TEST_REPORTS/junit/junit.xml
    # Multi-platform compile with version information      
    - gox -ldflags "-X github.com/$CIRCLE_PROJECT_USERNAME/centralconfig/cmd.buildVersion=1.0.$CIRCLE_BUILD_NUM -X github.com/$CIRCLE_PROJECT_USERNAME/centralconfig/cmd.commitId=$CIRCLE_SHA1" -output "${CIRCLE_ARTIFACTS}/${CIRCLE_PROJECT_REPONAME}_{{.OS}}_{{.Arch}}" $PACKAGE_PATH/... 
    # Build and tag our docker image            
    - cp $NATIVE_BINARY $DOCKER_DIR/centralconfig
    - cp $PROJECT_DIR/Dockerfile $DOCKER_DIR/
    - docker build -t $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME $DOCKER_DIR
    - docker tag $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_BUILD_NUM
deployment:
  release:
    branch: master
    commands:
    # Publish assets to Github
    - ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME v1.0.$CIRCLE_BUILD_NUM $CIRCLE_ARTIFACTS/ || true    
    # Push to docker
    - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
    - docker push $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
